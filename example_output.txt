Imported sys.path: ['/home/runner/workspace', '/home/runner/workspace/politipo/examples', '/nix/store/lc7qv2ldzrs1aq3hbyzmbgvn0h2w26pl-sitecustomize/lib/python/site-packages', '/nix/store/dfg63lldbvcj207iyr9z0xw21d8ax02n-python3.11-pip-24.0/lib/python3.11/site-packages', '/home/runner/workspace', '/nix/store/clx0mcir7qw8zk36zbr4jra789g3knf6-python3-3.11.10/lib/python311.zip', '/nix/store/clx0mcir7qw8zk36zbr4jra789g3knf6-python3-3.11.10/lib/python3.11', '/nix/store/clx0mcir7qw8zk36zbr4jra789g3knf6-python3-3.11.10/lib/python3.11/lib-dynload', '/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages', '/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages', '/nix/store/wblvmd5y7izx0z10d1w7ga7zc4apjxmb-python3.11-setuptools-75.1.1/lib/python3.11/site-packages']
Successfully imported politipo modules
======= Type Mapping with Pandera =======
Created TypeMapper instance

Mapping Pandera types to other libraries:
pa.Int -> SQLAlchemy: <class 'sqlalchemy.sql.sqltypes.Integer'>
pa.String -> Pandas: string
pa.Float -> Polars: Float64
pa.Bool -> Python: <class 'bool'>

Mapping other libraries' types to Pandera:
SQLAlchemy Integer -> Pandera: <class 'pandera.dtypes.Int'>
Python str -> Pandera: <class 'pandera.dtypes.String'>
Polars Float64 -> Pandera: <class 'pandera.dtypes.Float'>

======= DataFrame Validation with Pandera Schemas =======
Created Pandera schema

Pandas DataFrame:
   id     name
0   1    Alice
1   2      Bob
2   3  Charlie
Created TypeConverter for Pandas validation

Validated Pandas DataFrame:
   id     name
0   1    Alice
1   2      Bob
2   3  Charlie

Polars DataFrame:
shape: (3, 2)
┌─────┬─────────┐
│ id  ┆ name    │
│ --- ┆ ---     │
│ i64 ┆ str     │
╞═════╪═════════╡
│ 1   ┆ Alice   │
│ 2   ┆ Bob     │
│ 3   ┆ Charlie │
└─────┴─────────┘

Validating Polars DataFrame (converts to Pandas behind the scenes):
Created TypeConverter for Polars validation
Note: Polars validation requires Pandas as an intermediary: Pandera is required for this conversion. Please install it.

======= Handling Validation Errors =======

Invalid DataFrame (with string id):
     id   name
0  four  David
1     5    Eve
Attempting to validate invalid data (should fail)...

Validation Error (as expected):
  expected series 'id' to have type int64, got object

======= End of Example =======
